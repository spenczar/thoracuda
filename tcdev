#!/usr/bin/env bash

set -euo pipefail

function usage() {
    echo "Usage: tcdev <command> [options]"
    echo ""
    echo "Commands:"
    echo "  build        Build the project in debug mode"
    echo "  release      Build the project in release mode"
    echo "  clean        Clean the project"
    echo "  test         Run the tests"
    echo "  benchmark    Run the benchmarks"
    echo "  lint         Run the linter"
    echo "  valgrind     Run valgrind against the tests"
    echo "  update-rtags Update rtags"
    echo "  format	 Format the code"
    echo "  help         Display this help message"
}

function build() {
    mkdir -p build/debug
    pushd build/debug
    cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ../..
    make -j$(nproc)
    popd
}

function valgrind() {
    build
    valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose ./build/debug/tests/tests
    valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose ./build/debug/tests/tests_cuda
}

function update-rtags {
    build
    pushd build/debug
    rdm
    rc -J .
    popd
}

function release() {
    mkdir -p build/release
    pushd build/release
    cmake -DCMAKE_BUILD_TYPE=Release ../..
    make -j$(nproc)
    popd
}

function clean() {
    rm -rf build
}

function test() {
    build
    ./build/debug/tests/tests --skip-benchmarks "$@"    
    ASAN_OPTIONS=protect_shadow_gap=0:replace_intrin=0 ./build/debug/tests/tests_cuda --skip-benchmarks "$@"
}

function benchmark() {
    release
    ./build/release/tests/tests "$@"
    ./build/release/tests/tests_cuda "$@"    
}

function lint() {
    echo "Not implemented yet"
    exit 1
}

function format() {
    clang-format -i $(find ./src/ -name "*.cpp" -o -name "*.hpp")
    clang-format -i $(find ./src/cuda -name "*.cu" -o -name "*.h")    
}

function help() {
    usage
}

function main() {
    case "$1" in
	build)
	    shift
	    build "$@"
	    ;;
	release)
	    shift
	    release "$@"
	    ;;
	clean)
	    shift
	    clean "$@"
	    ;;
	test)
	    shift
	    test "$@"
	    ;;
	benchmark)
	    shift
	    benchmark "$@"
	    ;;
	lint)
	    shift
	    lint "$@"
	    ;;
	format)
	    shift
	    format "$@"
	    ;;
	valgrind)
	    shift
	    valgrind "$@"
	    ;;
	update-rtags)
	    shift
	    update-rtags "$@"
	    ;;
	help)
	    usage
	    ;;
	*)
	    usage
	    exit 1
	    ;;
    esac
}


main "$@"
